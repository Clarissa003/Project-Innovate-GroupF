// Generated by view binder compiler. Do not edit!
package com.michael.potcastplant.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Spinner;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputEditText;
import com.michael.potcastplant.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityAddPlantsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonAddPlant;

  @NonNull
  public final Button buttonSubmitRequest;

  @NonNull
  public final TextInputEditText editTextPot;

  @NonNull
  public final ImageView imageViewHeader;

  @NonNull
  public final Spinner spinnerPlants;

  private ActivityAddPlantsBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonAddPlant, @NonNull Button buttonSubmitRequest,
      @NonNull TextInputEditText editTextPot, @NonNull ImageView imageViewHeader,
      @NonNull Spinner spinnerPlants) {
    this.rootView = rootView;
    this.buttonAddPlant = buttonAddPlant;
    this.buttonSubmitRequest = buttonSubmitRequest;
    this.editTextPot = editTextPot;
    this.imageViewHeader = imageViewHeader;
    this.spinnerPlants = spinnerPlants;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityAddPlantsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityAddPlantsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_add_plants, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityAddPlantsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.button_add_plant;
      Button buttonAddPlant = ViewBindings.findChildViewById(rootView, id);
      if (buttonAddPlant == null) {
        break missingId;
      }

      id = R.id.button_submit_request;
      Button buttonSubmitRequest = ViewBindings.findChildViewById(rootView, id);
      if (buttonSubmitRequest == null) {
        break missingId;
      }

      id = R.id.edit_text_pot;
      TextInputEditText editTextPot = ViewBindings.findChildViewById(rootView, id);
      if (editTextPot == null) {
        break missingId;
      }

      id = R.id.image_view_header;
      ImageView imageViewHeader = ViewBindings.findChildViewById(rootView, id);
      if (imageViewHeader == null) {
        break missingId;
      }

      id = R.id.spinner_plants;
      Spinner spinnerPlants = ViewBindings.findChildViewById(rootView, id);
      if (spinnerPlants == null) {
        break missingId;
      }

      return new ActivityAddPlantsBinding((ConstraintLayout) rootView, buttonAddPlant,
          buttonSubmitRequest, editTextPot, imageViewHeader, spinnerPlants);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
